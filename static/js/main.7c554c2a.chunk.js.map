{"version":3,"sources":["services/character.classes.ts","services/spells.ts","services/util.ts","services/equipment.ts","services/portraits.ts","services/gods.ts","AttributesOverview.tsx","services/names.ts","services/character.generator.ts","CombatStats.tsx","SavingThrows.tsx","GenericArrayOverview.tsx","SpellsOverview.tsx","Personalia.tsx","ExtraPersonalia.tsx","Chargen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CharacterAttributes","spells","label","link","getModifier","score","getRndInteger","min","max","Math","floor","random","getRndValue","input","length","formatBonus","bonus","getSRDLink","suffix","basePack","fighterPacks","equipment","acMod","magicUserPacks","clericPacks","thiefPacks","armoredImages","Array","from","keys","map","x","dwarfsImages","elfsImages","gnomeImages","humansImages","piratesImages","scaryImages","steampunksImages","vampiresImages","zombiesImages","imagesHuman","imagesDwarves","imagesHalflings","imagesElf","calculateBaseBonusXP","attrVal","cleric","name","startingHP","savingThrows","url","abilities","image","bonusXP","attr","WIS","dwarf","STR","elf","INT","fighter","halfling","DEX","magicUser","thief","getClass","attributes","avClasses","CON","attributeOrder","CHA","AttributesOverview","calculateBonusXP","className","a","names","getAttributes","sort","slice","reduce","prev","curr","CombatStats","character","attributeScores","armorClass","maximumHP","SavingThrows","GenericArrayOverview","data","chonked","arr","n","chunkLength","chunks","i","push","chunkArray","reverse","eq","ix","SpellsOverview","href","target","rel","Personalia","charClass","ExtraPersonalia","style","maxWidth","maxHeight","aspectRatio","src","process","alt","Chargen","genChar","selectedClass","undefined","hp","generateCharacter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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A,OACA,OACA,SACA,QACA,QACA,UACA,SACA,QACA,UACA,UACA,UACA,WACA,QACA,WACA,QACA,SACA,SACA,OACA,SACA,QACA,QACA,OACA,WACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,WACA,QACA,UACA,SACA,UACA,QACA,OACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,MACA,SACA,OACA,UACA,QACA,UACA,SACA,MACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,OACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,UACA,UACA,QACA,QACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,QACA,OACA,SACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,MACA,QACA,OACA,MACA,QACA,YACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,UACA,UCjLIC,EAAgB,kBACpBlD,MAAMC,KAAKD,MAAM,GAAGE,QAAQC,KAAI,SAACC,GAAD,OAPjBJ,MAAMC,KAAKD,MAAM,GAAGE,QAChCC,KAAI,SAACC,GAAD,OAAOzB,EAAc,EAAG,MAC5BwE,OACWC,MAAM,GAAGC,QAAO,SAACC,EAAMC,GAAP,OAAgBA,EAAOD,SCoBxCE,EApCK,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,UACrB,OACE,qCACE,qBAAKV,UAAU,MAAf,SACE,sBAAKA,UAAU,SAAf,UACE,sBAAMA,UAAU,mBAAhB,+CAGA,uBAAMA,UAAU,OAAhB,iBAEG3D,EACCX,EAAYgF,EAAUC,iBAAiBrF,EAAoB0D,OAH/D,IAMG3C,EACCX,EAAYgF,EAAUC,iBAAiBrF,EAAoB+D,OAP/D,YAcJ,qBAAKW,UAAU,MAAf,SACE,sBAAKA,UAAU,SAAf,UACE,sBAAMA,UAAU,mBAAhB,yBACA,sBAAMA,UAAU,OAAhB,SAAwBU,EAAU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","file":"static/js/main.7c554c2a.chunk.js","sourcesContent":["import {\n  clericPacks,\n  fighterPacks,\n  IEquipmentPack,\n  magicUserPacks,\n  thiefPacks,\n} from './equipment';\nimport { gods } from './gods';\nimport {\n  imagesDwarves,\n  imagesElf,\n  imagesHalflings,\n  imagesHuman,\n} from './portraits';\nimport { spellReadMagic, spells } from './spells';\nimport { getRndValue, ILinkedItem } from './util';\n\nexport interface ICharacterClass {\n  name: string;\n  startingHP: number;\n  savingThrows: number[];\n  url: string;\n  abilities: string[];\n  suffix?: string;\n  equipment: IEquipmentPack;\n  image: string;\n  bonusXP: (attributes: number[]) => string;\n  spells?: ILinkedItem[];\n}\n\nexport const calculateBaseBonusXP = (attrVal: number) => {\n  if (attrVal <= 5) return '-20%';\n  if (attrVal <= 8) return '-10%';\n  if (attrVal <= 12) return '0%';\n  if (attrVal <= 15) return '+5%';\n  if (attrVal <= 18) return '+10%';\n  return '0%';\n};\n\nexport enum CharacterAttributes {\n  STR,\n  DEX,\n  CON,\n  INT,\n  WIS,\n  CHA,\n}\n\nconst cleric: ICharacterClass = {\n  name: 'Cleric',\n  startingHP: 6,\n  savingThrows: [11, 12, 14, 16, 15],\n  url: 'Cleric',\n  abilities: ['Turn Undead'],\n  suffix: `You worship ${getRndValue(gods)}.`,\n  equipment: getRndValue(clericPacks),\n  image: getRndValue(imagesHuman),\n  bonusXP: (attr: number[]) =>\n    calculateBaseBonusXP(attr[+CharacterAttributes.WIS]),\n};\n\nconst dwarf: ICharacterClass = {\n  name: 'Dwarf',\n  startingHP: 8,\n  savingThrows: [8, 9, 10, 13, 12],\n  url: 'Dwarf',\n  abilities: [\n    'Detect construction tricks (2-in-6)',\n    'Detect room traps (2-in-6)',\n    \"Infravision (60')\",\n    'Listen at doors (2-in-6)',\n  ],\n  equipment: getRndValue(fighterPacks),\n  image: getRndValue(imagesDwarves),\n  bonusXP: (attr: number[]) =>\n    calculateBaseBonusXP(attr[+CharacterAttributes.STR]),\n};\n\nconst elf: ICharacterClass = {\n  name: 'Elf',\n  startingHP: 6,\n  savingThrows: [12, 13, 13, 15, 15],\n  url: 'Elf',\n  abilities: [\n    'Arcane Magic (unarmoured only, one level one spell/day)',\n    'Detect secret doors (2-in-6)',\n    'Immune to ghoul paralysis',\n    \"Infravision (60')\",\n    'Listen at doors (2-in-6)',\n  ],\n  equipment: getRndValue(fighterPacks),\n  image: getRndValue(imagesElf),\n  spells: [getRndValue(spells)],\n  bonusXP: (attr: number[]) => {\n    if (\n      attr[+CharacterAttributes.INT] >= 16 &&\n      attr[+CharacterAttributes.STR] >= 13\n    ) {\n      return '+10%';\n    }\n    if (\n      attr[+CharacterAttributes.INT] >= 13 &&\n      attr[+CharacterAttributes.STR] >= 13\n    ) {\n      return '+5%';\n    }\n    return '+0%';\n  },\n};\n\nconst fighter: ICharacterClass = {\n  name: 'Fighter',\n  startingHP: 8,\n  savingThrows: [12, 13, 14, 15, 16],\n  url: 'Fighter',\n  abilities: [],\n  equipment: getRndValue(fighterPacks),\n  image: getRndValue(imagesHuman),\n  bonusXP: (attr: number[]) =>\n    calculateBaseBonusXP(attr[+CharacterAttributes.STR]),\n};\n\nconst halfling: ICharacterClass = {\n  name: 'Halfling',\n  startingHP: 6,\n  savingThrows: [8, 9, 10, 13, 12],\n  url: 'Halfling',\n  abilities: [\n    'Defensive bonus (+2 AC when attacked by larger-than-human opponents)',\n    'Hiding (90% in woods, 2-6 otherwise, must remain motionless)',\n    'Listen at doors (2-in-6)',\n    'Missile attack bonus (+1)',\n  ],\n  equipment: getRndValue(fighterPacks),\n  image: getRndValue(imagesHalflings),\n  bonusXP: (attr: number[]) => {\n    if (\n      attr[+CharacterAttributes.DEX] >= 13 &&\n      attr[+CharacterAttributes.STR] >= 13\n    ) {\n      return '+10%';\n    }\n    if (\n      attr[+CharacterAttributes.DEX] >= 13 ||\n      attr[+CharacterAttributes.STR] >= 13\n    ) {\n      return '+5%';\n    }\n    return '+0%';\n  },\n};\n\nconst magicUser: ICharacterClass = {\n  name: 'Magic-User',\n  startingHP: 4,\n  savingThrows: [13, 14, 13, 16, 15],\n  url: 'Magic-User',\n  abilities: ['Arcane Magic (unarmoured only, one level one spell/day)'],\n  equipment: getRndValue(magicUserPacks),\n  spells: [getRndValue(spells), spellReadMagic],\n  image: getRndValue(imagesHuman),\n  bonusXP: (attr: number[]) =>\n    calculateBaseBonusXP(attr[+CharacterAttributes.INT]),\n};\n\nconst thief: ICharacterClass = {\n  name: 'Thief',\n  startingHP: 4,\n  savingThrows: [13, 14, 13, 16, 15],\n  url: 'Thief',\n  abilities: [\n    'Thief skills',\n    'Backstab (+4 to hit and double damage when attacking an unaware opponent from behind)',\n  ],\n  equipment: getRndValue(thiefPacks),\n  image: getRndValue(imagesHuman),\n  bonusXP: (attr: number[]) =>\n    calculateBaseBonusXP(attr[+CharacterAttributes.DEX]),\n};\n\nexport const getClass = (attributes: number[]) => {\n  const max = Math.max(...attributes);\n  let avClasses: ICharacterClass[] = [fighter];\n  if (max === attributes[+CharacterAttributes.STR]) {\n    if (attributes[+CharacterAttributes.CON] > 9) {\n      avClasses = [...avClasses, dwarf];\n    }\n    if (attributes[+CharacterAttributes.INT] > 9) {\n      avClasses = [...avClasses, elf];\n    }\n  }\n  if (max === attributes[+CharacterAttributes.DEX]) {\n    avClasses = [...avClasses, thief];\n    if (attributes[+CharacterAttributes.CON] > 9) {\n      avClasses = [...avClasses, halfling];\n    }\n  }\n  if (max === attributes[+CharacterAttributes.CON]) {\n    if (attributes[+CharacterAttributes.STR] > 9) {\n      avClasses = [...avClasses, dwarf];\n    }\n    if (attributes[+CharacterAttributes.DEX] > 9) {\n      avClasses = [...avClasses, halfling];\n    }\n  }\n  if (max === attributes[+CharacterAttributes.INT]) {\n    avClasses = [magicUser];\n    if (attributes[+CharacterAttributes.STR] > 9) {\n      avClasses = [...avClasses, elf];\n    }\n  }\n  if (max === attributes[+CharacterAttributes.WIS]) {\n    avClasses = [cleric];\n  }\n  return getRndValue(avClasses);\n};\n","import { ILinkedItem } from './util';\n\nexport const spellReadMagic: ILinkedItem = {\n  label: 'Read Magic',\n  link: 'Read_Magic',\n};\n\nexport const spells: ILinkedItem[] = [\n  {\n    label: 'Charm Person',\n    link: 'Charm_Person',\n  },\n  {\n    label: 'Detect Magic',\n    link: 'Detect_Magic_(MU)',\n  },\n  {\n    label: 'Floating Disc',\n    link: 'Floating_Disc',\n  },\n  { label: 'Hold Portal', link: 'Hold_Portal' },\n  { label: 'Light/Darkness', link: 'Light_(Darkness)_(MU)' },\n  { label: 'Magic Missile', link: 'Magic_Missile' },\n  { label: 'Protection from Evil', link: 'Protection_from_Evil_(MU)' },\n  { label: 'Read Languages', link: 'Read_Languages' },\n  { label: 'Shield', link: 'Shield' },\n  { label: 'Sleep', link: 'Sleep' },\n  { label: 'Ventriloquism', link: 'Ventriloquism' },\n];\n","export const getModifier = (score: number) => {\n  if (score <= 3) return -3;\n  if (score <= 5) return -2;\n  if (score <= 8) return -1;\n  if (score <= 12) return 0;\n  if (score <= 15) return 1;\n  if (score <= 17) return 2;\n  if (score <= 18) return 3;\n  return 0;\n};\n\nexport const getRndInteger = (min: number, max: number) =>\n  Math.floor(Math.random() * (max - min + 1)) + min;\n\nexport const getRndValue = <T>(input: T[]) =>\n  input[getRndInteger(0, input.length - 1)];\n\nexport const chunkArray = <T>(arr: T[], n: number) => {\n  const chunkLength = Math.max(arr.length / n, 1);\n  const chunks = [];\n  for (var i = 0; i < n; i++) {\n    if (chunkLength * (i + 1) <= arr.length) {\n      chunks.push(arr.slice(chunkLength * i, chunkLength * (i + 1)));\n    }\n  }\n  return chunks;\n};\n\nexport const formatBonus = (bonus: number) =>\n  bonus > 0 ? `+${bonus}` : `${bonus}`;\n\nexport interface ILinkedItem {\n  label: string;\n  link: string;\n}\n\nexport const getSRDLink = (suffix: string) =>\n  `https://oldschoolessentials.necroticgnome.com/srd/index.php/${suffix}`;\n","import { spells } from './spells';\nimport { getRndInteger } from './util';\n\nexport interface IEquipmentPack {\n  equipment: string[];\n  acMod: number;\n}\n\nconst basePack = [\n  'Backpack',\n  'Torches (6)',\n  'Tinderbox, flint and steel',\n  'Wineskin/Waterskin',\n  'Winter Blanket',\n  'Rations, Dry, one week',\n  'Sack, Large',\n  'Sacks, small (2)',\n  `${getRndInteger(1, 6) * 10} gold pieces`,\n];\n\nexport const fighterPacks: IEquipmentPack[] = [\n  {\n    equipment: [\n      'Chain Mail (AC 14)',\n      'Shield (AC +1)',\n      'Longsword (1d8 + STR)',\n      ...basePack,\n    ],\n    acMod: +5,\n  },\n  {\n    equipment: [\n      'Chain Mail (AC 14)',\n      'Polearm (1d10 + STR, two handed, brace, slow)',\n      ...basePack,\n    ],\n    acMod: +4,\n  },\n  {\n    equipment: [\n      'Leather Armor (AC 12)',\n      'Longsword (1d8 + STR)',\n      \"Shortbow (1d6, 5'-50' (+1 to hit)/51'-100'/101'-150' (-1 to hit))\",\n      'Quiver with 30 arrows',\n      ...basePack,\n    ],\n    acMod: +2,\n  },\n];\n\nexport const elfPacks: IEquipmentPack[] = [\n  {\n    equipment: [`Spellbook`, ...fighterPacks[0].equipment],\n    acMod: +5,\n  },\n  {\n    equipment: ['Spellbook', ...fighterPacks[1].equipment],\n    acMod: +4,\n  },\n  {\n    equipment: ['Spellbook', ...fighterPacks[2].equipment],\n    acMod: +2,\n  },\n];\n\nexport const magicUserPacks: IEquipmentPack[] = [\n  {\n    equipment: [\n      `Spellbook`,\n      `Scroll of ${spells[getRndInteger(0, spells.length - 1)].label}`,\n      \"2 Daggers (1d4 + STR, 5'-10' (+1 to hit)/11'-20'/21'-30' (-1 to hit))\",\n      'Walking Staff  (1d4 + STR), slow, two handed) ',\n      ...basePack,\n    ],\n    acMod: +0,\n  },\n  {\n    equipment: [\n      'Spellbook',\n      '50 GP',\n      \"2 Daggers (1d4 + STR, 5'-10' (+1 to hit)/11'-20'/21'-30' (-1 to hit))\",\n      'Walking Staff (1d4 + STR, slow, two handed)',\n      ...basePack,\n    ],\n    acMod: +0,\n  },\n];\n\nexport const clericPacks: IEquipmentPack[] = [\n  {\n    equipment: [\n      'Leather armor (AC 12)',\n      'Shield (AC +1)',\n      'Holy Symbol',\n      'Vial of holy water',\n      'Mace (1d6)',\n      ...basePack,\n    ],\n    acMod: +3,\n  },\n  {\n    equipment: [\n      'Leather armor (AC 12)',\n      \"Sling (1d4 + STR, 5'-40' (+1 to hit)/41'-80'/81'-160' (-1 to hit))\",\n      '30 sling bullets in pouch',\n      'Holy Symbol',\n      'Vial of holy water',\n      'Mace (1d6)',\n      ...basePack,\n    ],\n    acMod: +2,\n  },\n];\n\nexport const thiefPacks: IEquipmentPack[] = [\n  {\n    equipment: [\n      'Leather armor (AC 12)',\n      \"Thieves' tools\",\n      'Shortsword (1d6)',\n      \"2 Daggers (1d4 + STR, 5'-10' (+1 to hit)/11'-20'/21'-30' (-1 to hit))\",\n      \"Silken Rope, 50'\",\n      ...basePack,\n    ],\n    acMod: +2,\n  },\n];\n","export const armoredImages = Array.from(Array(4).keys()).map(\n  (x) => `TCP Armored ${x + 1}.jpg`\n);\n\nexport const dwarfsImages = Array.from(Array(6).keys()).map(\n  (x) => `TCP Dwarf ${x + 1}.jpg`\n);\n\nexport const elfsImages = Array.from(Array(9).keys()).map(\n  (x) => `TCP Elf ${x + 1}.jpg`\n);\n\nexport const gnomeImages = Array.from(Array(2).keys()).map(\n  (x) => `TCP Gnome ${x + 1}.jpg`\n);\n\nexport const humansImages = Array.from(Array(8).keys()).map(\n  (x) => `TCP Human ${x + 1}.jpg`\n);\n\nexport const scientistsImages = ['TCP Mad Scientist 2.jpg'];\n\nexport const piratesImages = Array.from(Array(7).keys()).map(\n  (x) => `TCP Pirate ${x + 1}.jpg`\n);\n\nexport const scaryImages = Array.from(Array(3).keys()).map(\n  (x) => `TCP Scary ${x + 1}.jpg`\n);\n\nexport const steampunksImages = Array.from(Array(7).keys()).map(\n  (x) => `TCP Steampunk ${x + 1}.jpg`\n);\n\nexport const toonsImages = ['TCP Toon 1.jpg'];\n\nexport const vampiresImages = Array.from(Array(5).keys()).map(\n  (x) => `TCP Vampire ${x + 1}.jpg`\n);\n\nexport const zombiesImages = Array.from(Array(6).keys()).map(\n  (x) => `TCP Zombie ${x + 2}.jpg`\n);\n\nexport const imagesHuman = [\n  ...zombiesImages,\n  ...vampiresImages,\n  ...toonsImages,\n  ...steampunksImages,\n  ...scaryImages,\n  ...piratesImages,\n  ...scientistsImages,\n  ...humansImages,\n  ...armoredImages,\n];\n\nexport const imagesDwarves = [...dwarfsImages, ...armoredImages];\n\nexport const imagesHalflings = [...gnomeImages, ...humansImages];\n\nexport const imagesElf = [\n  ...vampiresImages,\n  ...elfsImages,\n  ...steampunksImages,\n];\n","export const gods = [\n  'Odin, supreme ruler of the gods',\n  'Balder, god of beauty',\n  'Bragi, god of poetry, eloquence and song',\n  'Forseti, god of justice',\n  'Frey, god of sunshine and elves',\n  'Freya, goddess of love and fertility',\n  'Frigga, weather goddess',\n  'Hel, goddess of death',\n  'Loki, god of mischief, strife and fire. And awesomeness',\n  'Magni, god of strength',\n  'Sif, goddess of excellence and skill in battle',\n  'Modi, god of courage',\n  'Thor, god of thunder (and rock and roll)',\n  'Tyr, god of war and law',\n  'Uller, god of hunting, archery and winter',\n];\n","import { CharacterAttributes } from './services/character.classes';\nimport { formatBonus, getModifier } from './services/util';\n\nconst attributeOrder: CharacterAttributes[] = [\n  CharacterAttributes.STR,\n  CharacterAttributes.DEX,\n  CharacterAttributes.CON,\n  CharacterAttributes.INT,\n  CharacterAttributes.WIS,\n  CharacterAttributes.CHA,\n];\n\nconst AttributesOverview = ({\n  attributes,\n  calculateBonusXP,\n}: {\n  attributes: number[];\n  calculateBonusXP: (input: number[]) => string;\n}) => {\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          {attributeOrder.map((a: CharacterAttributes) => {\n            return (\n              <>\n                <span className=\"font-weight-bold\">\n                  {CharacterAttributes[a]}\n                </span>\n                <span className=\"ml-2 mr-2\">\n                  {attributes[+a]} ({formatBonus(getModifier(attributes[+a]))})\n                </span>\n              </>\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          <span className=\"font-weight-bold\">Bonus XP</span>\n          <span className=\"ml-2\">{calculateBonusXP(attributes)}</span>\n        </div>\n      </div>\n      <hr />\n    </>\n  );\n};\n\nexport default AttributesOverview;\n","// source https://medium.com/@barelyharebooks/a-master-list-of-300-fantasy-names-characters-towns-and-villages-47c113f6a90b\n\nexport const names = [\n  'Lydan',\n  'Syrin',\n  'Ptorik',\n  'Joz',\n  'Varog',\n  'Gethrod',\n  'Hezra',\n  'Feron',\n  'Ophni',\n  'Colborn',\n  'Fintis',\n  'Gatlin',\n  'Jinto',\n  'Hagalbar',\n  'Krinn',\n  'Lenox',\n  'Revvyn',\n  'Hodus',\n  'Dimian',\n  'Paskel',\n  'Kontas',\n  'Weston',\n  'Azamarr',\n  'Jather',\n  'Tekren',\n  'Jareth',\n  'Adon',\n  'Zaden',\n  'Eune',\n  'Graff',\n  'Tez',\n  'Jessop',\n  'Gunnar',\n  'Pike',\n  'Domnhar',\n  'Baske',\n  'Jerrick',\n  'Mavrek',\n  'Riordan',\n  'Wulfe',\n  'Straus',\n  'Tyvrik',\n  'Henndar',\n  'Favroe',\n  'Whit',\n  'Jaris',\n  'Renham',\n  'Kagran',\n  'Lassrin',\n  'Vadim',\n  'Arlo',\n  'Quintis',\n  'Vale',\n  'Caelan',\n  'Yorjan',\n  'Khron',\n  'Ishmael',\n  'Jakrin',\n  'Fangar',\n  'Roux',\n  'Baxar',\n  'Hawke',\n  'Gatlen',\n  'Barak',\n  'Nazim',\n  'Kadric',\n  'Paquin',\n  'Kent',\n  'Moki',\n  'Rankar',\n  'Lothe',\n  'Ryven',\n  'Clawsen',\n  'Pakker',\n  'Embre',\n  'Cassian',\n  'Verssek',\n  'Dagfinn',\n  'Ebraheim',\n  'Nesso',\n  'Eldermar',\n  'Rivik',\n  'Rourke',\n  'Barton',\n  'Hemm',\n  'Sarkin',\n  'Blaiz',\n  'Talon',\n  'Agro',\n  'Zagaroth',\n  'Turrek',\n  'Esdel',\n  'Lustros',\n  'Zenner',\n  'Baashar',\n  'Dagrod',\n  'Gentar',\n  'Feston',\n  'Syrana',\n  'Resha',\n  'Varin',\n  'Wren',\n  'Yuni',\n  'Talis',\n  'Kessa',\n  'Magaltie',\n  'Aeris',\n  'Desmina',\n  'Krynna',\n  'Asralyn',\n  'Herra',\n  'Pret',\n  'Kory',\n  'Afia',\n  'Tessel',\n  'Rhiannon',\n  'Zara',\n  'Jesi',\n  'Belen',\n  'Rei',\n  'Ciscra',\n  'Temy',\n  'Renalee',\n  'Estyn',\n  'Maarika',\n  'Lynorr',\n  'Tiv',\n  'Annihya',\n  'Semet',\n  'Tamrin',\n  'Antia',\n  'Reslyn',\n  'Basak',\n  'Vixra',\n  'Pekka',\n  'Xavia',\n  'Beatha',\n  'Yarri',\n  'Liris',\n  'Sonali',\n  'Razra',\n  'Soko',\n  'Maeve',\n  'Everen',\n  'Yelina',\n  'Morwena',\n  'Hagar',\n  'Palra',\n  'Elysa',\n  'Sage',\n  'Ketra',\n  'Lynx',\n  'Agama',\n  'Thesra',\n  'Tezani',\n  'Ralia',\n  'Esmee',\n  'Heron',\n  'Naima',\n  'Rydna',\n  'Sparrow',\n  'Baakshi',\n  'Ibera',\n  'Phlox',\n  'Dessa',\n  'Braithe',\n  'Taewen',\n  'Larke',\n  'Silene',\n  'Phressa',\n  'Esther',\n  'Anika',\n  'Rasy',\n  'Harper',\n  'Indie',\n  'Vita',\n  'Drusila',\n  'Minha',\n  'Surane',\n  'Lassona',\n  'Merula',\n  'Kye',\n  'Jonna',\n  'Lyla',\n  'Zet',\n  'Orett',\n  'Naphtalia',\n  'Turi',\n  'Rhays',\n  'Shike',\n  'Hartie',\n  'Beela',\n  'Leska',\n  'Vemery',\n  'Lunex',\n  'Fidess',\n  'Tisette',\n  'Partha',\n];\n","import {\n  CharacterAttributes,\n  getClass,\n  ICharacterClass,\n} from './character.classes';\nimport { names } from './names';\nimport { getModifier, getRndInteger, getRndValue } from './util';\n\nexport interface ICharacter {\n  armorClass: number;\n  name: string;\n  charClass: ICharacterClass;\n  attributeScores: number[];\n  maximumHP: number;\n}\n\nconst getAttribute = () => {\n  const sorted = Array.from(Array(4).keys())\n    .map((x) => getRndInteger(1, 6))\n    .sort();\n  return sorted.slice(1).reduce((prev, curr) => curr + prev);\n};\n\nconst getAttributes = () =>\n  Array.from(Array(6).keys()).map((x) => getAttribute());\n\nexport const generateCharacter = () => {\n  let selectedClass = undefined;\n  let attributes: number[] = [];\n  while (!selectedClass) {\n    attributes = getAttributes();\n    selectedClass = getClass(attributes);\n  }\n  const hp =\n    getRndInteger(3, selectedClass.startingHP) +\n    getModifier(attributes[+CharacterAttributes.CON]);\n  const genChar: ICharacter = {\n    name: getRndValue(names),\n    charClass: selectedClass,\n    attributeScores: attributes,\n    maximumHP: hp > 0 ? hp : 1,\n    armorClass:\n      10 +\n      selectedClass.equipment.acMod +\n      getModifier(attributes[+CharacterAttributes.DEX]),\n  };\n  return genChar;\n};\n","import { CharacterAttributes } from './services/character.classes';\nimport { ICharacter } from './services/character.generator';\nimport { formatBonus, getModifier } from './services/util';\n\nconst CombatStats = ({ character }: { character: ICharacter }) => {\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          <span className=\"font-weight-bold\">\n            Base Attack Bonus (melee, ranged)\n          </span>\n          <span className=\"ml-2\">\n            +0 (\n            {formatBonus(\n              getModifier(character.attributeScores[+CharacterAttributes.STR])\n            )}\n            ,\n            {formatBonus(\n              getModifier(character.attributeScores[+CharacterAttributes.DEX])\n            )}\n            )\n          </span>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          <span className=\"font-weight-bold\">Armor Class</span>\n          <span className=\"ml-2\">{character.armorClass}</span>\n          <span className=\"ml-2 font-weight-bold\">Maximum Hit Points</span>\n          <span className=\"ml-2\">{character.maximumHP}</span>\n        </div>\n      </div>\n\n      <hr />\n    </>\n  );\n};\n\nexport default CombatStats;\n","const SavingThrows = ({ savingThrows }: { savingThrows: number[] }) => {\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          <span className=\"font-weight-bold\">Death Ray or Poison</span>\n          <span className=\"ml-2\">{savingThrows[0]}</span>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          <span className=\"font-weight-bold\">Magical Wands</span>\n          <span className=\"ml-2\">{savingThrows[1]}</span>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          <span className=\"font-weight-bold\">Paralysis or Petrification</span>\n          <span className=\"ml-2\">{savingThrows[2]}</span>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          <span className=\"font-weight-bold\">Dragon Breath</span>\n          <span className=\"ml-2\">{savingThrows[3]}</span>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          <span className=\"font-weight-bold\">Rods, Staves, Spells</span>\n          <span className=\"ml-2\">{savingThrows[4]}</span>\n        </div>\n      </div>\n\n      <hr />\n    </>\n  );\n};\n\nexport default SavingThrows;\n","import { chunkArray } from './services/util';\n\nconst GenericArrayOverview = ({ data }: { data: string[] }) => {\n  if (data.length) {\n    const chonked = chunkArray(\n      data.length > 2 ? data : ['', '', ...data],\n      2\n    ).reverse(); // most items first\n    return (\n      <>\n        {chonked[0].map((eq, ix) => (\n          <div className=\"row\">\n            <div className=\"col-sm\">{eq}</div>\n            {chonked[1].length !== ix ? (\n              <div className=\"col-sm\">{chonked[1][ix]}</div>\n            ) : (\n              <></>\n            )}\n          </div>\n        ))}\n        <hr />\n      </>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default GenericArrayOverview;\n","import { getSRDLink, ILinkedItem } from './services/util';\n\nconst SpellsOverview = ({ data }: { data: ILinkedItem[] }) => {\n  if (data.length) {\n    return (\n      <>\n        {data.map((eq) => (\n          <div className=\"row\">\n            <div className=\"col-sm\">\n              <a href={getSRDLink(eq.link)} target=\"_blank\" rel=\"noreferrer\">\n                {eq.label}\n              </a>\n            </div>\n          </div>\n        ))}\n        <hr />\n      </>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default SpellsOverview;\n","import { ICharacter } from './services/character.generator';\nimport { getSRDLink } from './services/util';\n\nconst Personalia = ({ character }: { character: ICharacter }) => {\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          You are {character.name} the{' '}\n          <a\n            href={getSRDLink(character.charClass.url)}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {character.charClass.name}\n          </a>\n        </div>\n      </div>\n      {character.charClass.suffix ? (\n        <div className=\"row\">\n          <div className=\"col-sm\">{character.charClass.suffix}</div>\n        </div>\n      ) : (\n        <></>\n      )}\n      <hr />\n    </>\n  );\n};\n\nexport default Personalia;\n","import { ICharacter } from './services/character.generator';\n\nconst ExtraPersonalia = ({ character }: { character: ICharacter }) => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm\">\n        <img\n          className=\"img-thumbnail\"\n          style={{ maxWidth: 200, maxHeight: 200, aspectRatio: 'auto' }}\n          src={`${process.env.PUBLIC_URL}/portraits/${character.charClass.image}`}\n          alt=\"your portrait\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ExtraPersonalia;\n","import AttributesOverview from './AttributesOverview';\nimport { generateCharacter } from './services/character.generator';\nimport CombatStats from './CombatStats';\nimport SavingThrows from './SavingThrows';\nimport GenericArrayOverview from './GenericArrayOverview';\nimport SpellsOverview from './SpellsOverview';\nimport Personalia from './Personalia';\nimport ExtraPersonalia from './ExtraPersonalia';\n\nconst Chargen = () => {\n  const genChar = generateCharacter();\n  return (\n    <>\n      <Personalia character={genChar} />\n      <AttributesOverview\n        attributes={genChar.attributeScores}\n        calculateBonusXP={genChar.charClass.bonusXP}\n      />\n      <SavingThrows savingThrows={genChar.charClass.savingThrows} />\n      <CombatStats character={genChar} />\n      <GenericArrayOverview data={genChar.charClass.abilities} />\n      <SpellsOverview data={genChar.charClass.spells ?? []} />\n      <GenericArrayOverview data={genChar.charClass.equipment.equipment} />\n      <ExtraPersonalia character={genChar} />\n    </>\n  );\n};\n\nexport default Chargen;\n","import Chargen from './Chargen';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Chargen />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}